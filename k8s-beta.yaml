apiVersion: v1
kind: Service
metadata:
  annotations: {service.beta.kubernetes.io/azure-load-balancer-internal: 'true'}
  labels: {fint.stack: kultur-kulturminnevern, fint.role: consumer}
  name: consumer-kultur-kulturminnevern
spec:
  type: LoadBalancer
  ports:
    - {name: '8080', port: 8080}
  selector: {fint.stack: kultur-kulturminnevern, fint.role: consumer}
---
apiVersion: v1
kind: Service
metadata:
  annotations: {service.beta.kubernetes.io/azure-load-balancer-internal: 'true'}
  labels: {fint.stack: kultur-kulturminnevern, fint.role: provider}
  name: provider-kultur-kulturminnevern
spec:
  type: LoadBalancer
  ports:
    - {name: '8080', port: 8080}
  selector: {fint.stack: kultur-kulturminnevern, fint.role: provider}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {fint.stack: kultur-kulturminnevern, fint.role: consumer}
  name: consumer-kultur-kulturminnevern
spec:
  replicas: 1
  selector:
    matchLabels: {fint.stack: kultur-kulturminnevern, fint.role: consumer}
  strategy:
    type: RollingUpdate
    rollingUpdate: {maxSurge: 1, maxUnavailable: 0}
  template:
    metadata:
      labels: {fint.stack: kultur-kulturminnevern, fint.role: consumer}
    spec:
      containers:
        - name: consumer-kultur-kulturminnevern
          image: fintlabs.azurecr.io/consumer-kulturminnevern:PR-3.2
          envFrom:
            - configMapRef:
                name: fint-environment
                optional: true
          env:
            - name: fint.audit.mongo.connection-string
              valueFrom:
                secretKeyRef: {key: mongodb, name: fint-audit}
            - {name: fint.hazelcast.kubernetes.enabled, value: 'true'}
            - {name: fint.hazelcast.kubernetes.namespace, value: default}
            - {name: fint.hazelcast.kubernetes.labelName, value: fint.stack}
            - {name: fint.hazelcast.kubernetes.labelValue, value: kultur-kulturminnevern}
            - {name: server.context-path, value: /kultur/kulturminnevern}
            - {name: logging.level.no.fint.consumer.models.tilskuddfartoy, value: DEBUG}
            - {name: logging.level.no.fint.audit.plugin.mongo, value: DEBUG}
            - {name: logging.level.no.fint.consumer.event, value: DEBUG}
          ports:
            - {containerPort: 8080}
          readinessProbe:
            httpGet: {path: /kultur/kulturminnevern/health, port: 8080}
            initialDelaySeconds: 60
            timeoutSeconds: 5
          resources:
            limits: {memory: 3Gi, cpu: '2'}
            requests: {memory: 2Gi, cpu: 250m}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {fint.stack: kultur-kulturminnevern, fint.role: provider}
  name: provider-kultur-kulturminnevern
spec:
  replicas: 1
  selector:
    matchLabels: {fint.stack: kultur-kulturminnevern, fint.role: provider}
  strategy:
    type: RollingUpdate
    rollingUpdate: {maxSurge: 1, maxUnavailable: 0}
  template:
    metadata:
      labels: {fint.stack: kultur-kulturminnevern, fint.role: provider}
    spec:
      containers:
        - name: provider-kultur-kulturminnevern
          image: fintlabs.azurecr.io/provider:2.3.0-alpha-1
          envFrom:
            - configMapRef:
                name: fint-environment
                optional: true
          env:
            - name: fint.audit.mongo.connection-string
              valueFrom:
                secretKeyRef: {key: mongodb, name: fint-audit}
            - {name: fint.hazelcast.kubernetes.enabled, value: 'true'}
            - {name: fint.hazelcast.kubernetes.namespace, value: default}
            - {name: fint.hazelcast.kubernetes.labelName, value: fint.stack}
            - {name: fint.hazelcast.kubernetes.labelValue, value: kultur-kulturminnevern}
            - {name: fint.provider.max-number-of-emitters, value: '5'}
            - {name: server.context-path, value: /kultur/kulturminnevern/provider}
            - {name: fint.provider.assets.endpoint, value: 'https://admin.fintlabs.no/api/components/assets/kultur_kulturminnevern'}
          ports:
            - {containerPort: 8080}
          readinessProbe:
            httpGet: {path: /kultur/kulturminnevern/provider/health, port: 8080}
            initialDelaySeconds: 60
            timeoutSeconds: 5
          resources:
            limits: {memory: 3Gi, cpu: '2'}
            requests: {memory: 2Gi, cpu: 250m}
      restartPolicy: Always
